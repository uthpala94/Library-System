/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import static Serialization.serialization.desirializeBook;
import static Serialization.serialization.desirializeMember;
import static Serialization.serialization.serializeBook;
import static Serialization.serialization.serializeMember;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
//import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import libarysystem.Book;
import libarysystem.Member;
import libarysystem.SetOfBooks;
import libarysystem.SetOfMembers;

/**
 *
 * @author Uthpala Jayawardena
 */
public class LibraryH extends javax.swing.JFrame {

    /**
     * Creates new form LibraryH
     */

    private final SetOfBooks stBooks;
    private SetOfBooks setOfSelBooks;
    private SetOfBooks stloanBooks;
    private Book selectedBooks;
    private Member selectedMember;
    private final SetOfMembers stMember;
    
    
    
   // private ArrayList<Book> booksArray = new ArrayList<Book>(); 
    
    private int bookCount;
    
    public LibraryH() throws IOException, ClassNotFoundException{
        initComponents();
        
       
        
        stMember = desirializeMember();
        stBooks = desirializeBook();

        
         bookCount = 0;
        System.out.println(stBooks);

        setOfSelBooks = new SetOfBooks();

        stloanBooks = new SetOfBooks();
        
        initLoanBooks();
        
        Book ob1 = new Book();
        initTablesAndCombo();
        
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        
    }
      public void initTablesAndCombo() {
          
        update_LoanBooktable(this.stloanBooks);
        
        update_BookOnLoanTable(this.stloanBooks);
        
        update_IssuedBooktable(this.stloanBooks);
        
        
        
        fillSelectMemberCombo();
        update_Booktable(this.stBooks);
        fillSelectBookCombo();
        update_MemberTable(this.stMember);
        
       // booksArray.add(book);
        update_BooksNotOnLoanTable();

    }
      
      
     public void initLoanBooks() {
         
         //booksArray.add(book)
         
         // comboBox.addItem(book.getName());
         
         // int i = comboBox.getSelectedItemIndex(); // <---- 0
         
         // Book bk = booksArray.get(i); <----- 0
         
         int totalElements = this.stBooks.size();

        Book book;
        
        for (int index = 0; index < totalElements; index++) {

            book = this.stBooks.get(index);
            if (book.isOnLoan()) {
                this.stloanBooks.addBook(book);
            }

        }

    }
   
    
     private boolean bookValidate(String title, String ISBN, String author, String catalogue) {

        if (title.isEmpty()) {
            return false;
        }
        if (ISBN.isEmpty()) {
            return false;
        }
        if (author.isEmpty()) {
            return false;
        }
        if (catalogue == null) {
            return false;
        }

        return true;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        memName = new javax.swing.JTextField();
        memDob = new datechooser.beans.DateChooserCombo();
        jScrollPane4 = new javax.swing.JScrollPane();
        memAddress = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        memSearch = new javax.swing.JTextField();
        searchMemMode = new javax.swing.JComboBox<>();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        memTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        selectBookCombo = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        selectMemCombo = new javax.swing.JComboBox<>();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        SelectedBooktable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        loanBookTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        IssuedBookTable = new javax.swing.JTable();
        jButton14 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        acceptedBookTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TextTitle = new javax.swing.JTextField();
        TextISBN = new javax.swing.JTextField();
        TextAuthor = new javax.swing.JTextField();
        ComboCatalogue = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookTable = new javax.swing.JTable();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BookOnLoanTable = new javax.swing.JTable();
        loanMemCombo = new javax.swing.JComboBox<>();
        searchLoanMem = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        booksNotOnLoanTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel8.setText("Name :");

        jLabel9.setText("Date Of Birth :");

        jLabel10.setText("Address:");

        memAddress.setColumns(20);
        memAddress.setRows(5);
        jScrollPane4.setViewportView(memAddress);

        jButton7.setText("Reset");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Add");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        searchMemMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Member Name", "Member Number" }));

        jButton9.setText("Search");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Show All");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        memTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Member No", "Name", "Date Of Birth", "Address"
            }
        ));
        jScrollPane5.setViewportView(memTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(memName, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 100, Short.MAX_VALUE)
                                .addComponent(jButton7)
                                .addGap(18, 18, 18)
                                .addComponent(jButton8))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(memDob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(searchMemMode, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(memSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9)
                                .addGap(18, 18, 18)
                                .addComponent(jButton10)
                                .addGap(107, 107, 107))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(memName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9)
                            .addComponent(jButton10)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchMemMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(memSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(memDob, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8)
                            .addComponent(jButton7)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(127, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Members", jPanel3);

        jLabel11.setText("Select book");

        jLabel12.setText("Select Member");

        jButton12.setText("Add Book");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Issue Book");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        SelectedBooktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Accession No", "Title", "Author", "ISBN", "Catalogue "
            }
        ));
        jScrollPane6.setViewportView(SelectedBooktable);

        loanBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Accession No ", "Title", "Author", "ISBN", "Catalogue ", "Member ID", "Member Name", "Loan Date"
            }
        ));
        jScrollPane7.setViewportView(loanBookTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(selectBookCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(141, 141, 141)
                                .addComponent(jButton12))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(selectMemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(147, 147, 147)
                                .addComponent(jButton13)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(selectBookCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(selectMemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Issue Book", jPanel4);

        jLabel13.setText("Issued Books");

        IssuedBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Acc No", "Title", "Author", "Mem ID", "Member Name", "Issue Date"
            }
        ));
        jScrollPane8.setViewportView(IssuedBookTable);

        jButton14.setText("Accept");

        acceptedBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Acc No", "Title", "Author", "Accepted Date"
            }
        ));
        jScrollPane9.setViewportView(acceptedBookTable);

        jLabel14.setText("Return Books");

        jButton16.setText("Accept");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addGap(102, 102, 102)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(356, 356, 356)
                                .addComponent(jButton14))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jButton16))))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jButton16)
                        .addGap(20, 20, 20)
                        .addComponent(jButton14))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel13))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(150, 150, 150))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))))
        );

        jTabbedPane1.addTab("Return Book", jPanel5);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Title :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("ISBN :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Author :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Catalogue :");

        ComboCatalogue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Catalogue 1", "Catalogue 2", "Catalogue 3", "Catalogue 4" }));

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        Reset.setText("Clear");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        BookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Accession No ", "Title", "Author", "ISBN", "Catalogue"
            }
        ));
        jScrollPane1.setViewportView(BookTable);

        BookOnLoanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Accession No", "Title", "Author", "ISBN", "Catalogue Name", "Member ID", "Member Name", "Loan Date"
            }
        ));
        jScrollPane2.setViewportView(BookOnLoanTable);

        loanMemCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Member ID", "Member Name" }));

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(loanMemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchLoanMem, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loanMemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchLoanMem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Books on loan", jPanel6);

        booksNotOnLoanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Accession No", "Title ", "Author", "ISBN", "Catalogue ", "Last Accepted Date"
            }
        ));
        jScrollPane3.setViewportView(booksNotOnLoanTable);

        jTabbedPane2.addTab("Books not on loan", jScrollPane3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(TextISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(TextTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(Reset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(129, 129, 129))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TextTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TextISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(Reset)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Books", jPanel2);

        jPanel1.add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 80, 980, 470);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel2.setText("Libary System");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(300, 0, 350, 90);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Tonalism2.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 980, 550);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 997, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        String Title = TextTitle.getText();
        String ISBN = TextISBN.getText();
        String Author = TextAuthor.getText();
        String Catalogue = ComboCatalogue.getSelectedItem().toString();

        
        if (bookValidate(Title, ISBN, Author, Catalogue)) {
            
            Book addBook = new Book(Title, Author, ISBN, Catalogue);
            Book lastBook = stBooks.get(stBooks.size() - 1);
            addBook.setAccessionNumber(lastBook.getsetAccessionNumber() + 1);
            stBooks.addBook(addBook);

            
            try {
                serializeBook(stBooks);

                JOptionPane.showMessageDialog(this, "Successfully Add the Book");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
            
            bookClean();
            
            initTablesAndCombo();
            
        } else {
            JOptionPane.showMessageDialog(this, "Please fill all the fields");
        }

        
    }//GEN-LAST:event_jButton4ActionPerformed

     private void bookClean() {
        
        TextTitle.setText(null);
        TextISBN.setText(null);;
        TextAuthor.setText(null);;

    }
    /////////////////////////////////////////////////////////////
    
    
    
    private void fillSelectBookCombo() {
        
       // selectBookCombo.addItem(book.getTitle());
        selectBookCombo.removeAllItems();
        
        int totalElements = this.stBooks.size();
        Book book;
        for (int index = 0; index < totalElements; index++) {

            book = this.stBooks.get(index);
            if (book.isOnLoan() == false)
            {

                selectBookCombo.addItem(book.toString());
                //int i = selectBookCombo.getSelectedIndex(); 
                //Book bk = booksArray.get(i);
            }

        } 

    }

    
    private void fillSelectMemberCombo() {
        
        selectMemCombo.removeAllItems();
        int totalElements = this.stMember.size();
        Member mem;
        
        for (int index = 0; index < totalElements; index++) {

        
            mem =this.stMember.get(index);
            
            selectMemCombo.addItem(mem.toString());

        }

    }
    /////////////////////////////////////////////////////////////////////////////
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
      String keyword = memSearch.getText();
        if (keyword.equals("")) {
            JOptionPane.showMessageDialog(this, "Please Enter the a word to search");
            
        }
        else
        {
            SetOfMembers searchedMem;
            Object obt = searchMemMode.getSelectedItem();
            String searchMode = obt.toString();
            System.out.println(searchMode);
            
            if (searchMode.equals("Member Name")) 
            {
                searchedMem = this.stMember.getMemberFromName(keyword);
                update_MemberTable(searchedMem);
            }
            
            if (searchMode.equals("Member Number"))
            {
                searchedMem = this.stMember.getMemberFromNo(Integer.parseInt(keyword));
                update_MemberTable(searchedMem);
            } 
            else
            {
                ////////////////////////////////////////////

            }
        }        
        
        ///////////////////////////////////
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
          
        try {
            
        
            if (selectBookCombo.getSelectedItem() == null) {
            
            JOptionPane.showMessageDialog(this, "No Books are selected");
        } else if (this.setOfSelBooks.contains((Book) selectBookCombo.getSelectedItem()))
        {
            JOptionPane.showMessageDialog(this, "Books are already added ");
        }
        else
        {
            if (this.bookCount < 3) {

                Book book;
                Object ob = selectBookCombo.getSelectedItem();
                book = (Book) ob;
                this.setOfSelBooks.addBook(book);
                
                update_SelectedBooktable(this.setOfSelBooks);
                this.bookCount++;
            } 
            else 
            {
                JOptionPane.showMessageDialog(this, "You Can issue not more than 3 Books");
            }
        }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
        }

        
    }//GEN-LAST:event_jButton12ActionPerformed

        private void memberClean() {
        memName.setText(null);;
        memDob.setText(null);;
        memAddress.setText(null);;
     }
         
         
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        String mName = memName.getText();
        String mDob = memDob.getText();
        String mAddress = memAddress.getText();
        
        
        if (memberValidate(mName, mDob, mAddress)) {

            Member mem = new Member(mName, mAddress, mDob);
            Member lastMem = stMember.get(stMember.size() - 1);
            mem.setMemberNumber(lastMem.getMemberNumber() + 1);
            stMember.addMember(mem);

            try {
                serializeMember(stMember);

                JOptionPane.showMessageDialog(this, "Successfully add the member");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
            memberClean();
            
            initTablesAndCombo();
        } 
        else
        {
            JOptionPane.showMessageDialog(this, "Please fill all the fields");
        }

        
        /////////////////////////////
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
         update_MemberTable(stMember);  
    }//GEN-LAST:event_jButton10ActionPerformed

    
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        
        
        if (setOfSelBooks.isEmpty()) {
            
            JOptionPane.showMessageDialog(this, "Please select books");
        } 
        else 
        {
            Object ob = selectMemCombo.getSelectedItem();

            Member mem;
            mem = (Member) ob;
            setLoanBooks(this.setOfSelBooks, mem);
            update_SelectedBooktable(this.setOfSelBooks);
            
            initTablesAndCombo();
            fillSelectBookCombo();

    }//GEN-LAST:event_jButton13ActionPerformed
    }
    
    
    ///////////////////////////////////////////////////////////////////
    
    
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        if (IssuedBookTable.getSelectedRow() != -1) {

            if (JOptionPane.showConfirmDialog(rootPane, "Are you sure want to accept") == 0) 
            {

                Object data = (Object) IssuedBookTable.getSelectedRow();
                
                int accNo = Integer.parseInt(data.toString());
                Book book;
                book = this.stloanBooks.remove(accNo);

                AcceptBooks(book);
                update_AcceptedBooktable(book);
                //update_AcceptedBooktable(book.tostring());
                initTablesAndCombo();

            }

        } 
        ////////////////////////////////////////////////////////////
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
         String keyword = searchLoanMem.getText();
        if (keyword.equals("")) {
            
            JOptionPane.showMessageDialog(this, "Please enter the a word");
        }
        else
        {

            Object obt = loanMemCombo.getSelectedItem();
            String searchMode = obt.toString();
            System.out.println(searchMode);
            
            if (searchMode.equals("Member ID"))
            {

                
                    int memID = Integer.parseInt(keyword);

                    update_BookOnLoanTableBymID(this.stloanBooks, memID);
                
            } else if (searchMode.equals("Member Name")) {
                update_BookOnLoanTableBymName(this.stloanBooks, keyword);
            }

        }
        
        
        //////////////////////////////////
    }//GEN-LAST:event_jButton5ActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
        
        bookClean();
    }//GEN-LAST:event_ResetActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        memberClean();
    }//GEN-LAST:event_jButton7ActionPerformed

//    private void fillSelectBkCombo() {
//        selectBookCombo.removeAllItems();
//        int totalElements = this.stBooks.size();
//        Book book;
//        for (int index = 0; index < totalElements; index++) {
//
//            book = this.stBooks.get(index);
//            if (book.isOnLoan() == false) {
//                
//                selectBookCombo.addItem(book);
//            }
//
//        }
//
//    }
//    ////////////////////////
//     private void fillSelectMemCombo() {
//        selectMemCombo.removeAllItems();
//        int totalElements = this.stMember.size();
//        Member mem;
//        for (int index = 0; index < totalElements; index++) {
//
//            mem = this.stMember.get(index);
//
//            selectMemCombo.addItem(mem);
//
//        }
//
//    }
     /////////////////////////////
     private boolean memberValidate(String mName, String DoB, String address) {

        if (mName.isEmpty()) {
            return false;
        }
        if (DoB.isEmpty()) {
            return false;
        }
        if (address.isEmpty()) {
            return false;
        }

        return true;

    }
     

     
     
       private void setLoanBooks(SetOfBooks setOfSelBooks, Member mem) {
           
        boolean status;

        if (mem.getCurrentLoans().size() > 3) {
            JOptionPane.showMessageDialog(this, "You have already issued 3 books for this Member");
        } 
        else 
        {
            Book book;
            int size = setOfSelBooks.size();

            for (int index = 0; index < size; index++) {
                book = setOfSelBooks.get(index);

                status = mem.borrowBook(book);
                if (!status) {
                    JOptionPane.showMessageDialog(this, "Cannot Issue book index " + book.getsetAccessionNumber() + " in the table, you reached the maximum number of books");
                    break;
                } 
                else
                {

                    this.stloanBooks.addBook(book);
                    Member mem1;
                    int mSize = this.stMember.size();
                    for (int mIndex = 0; mIndex < mSize; mIndex++) {
                        mem1 = this.stMember.get(mIndex);

                        if (mem1.getMemberNumber() == mem.getMemberNumber()) {

                            stMember.set(index, mem);
                        }
                    }

                    int totBooks = this.stBooks.size();
                    
                    for (int iIndex = 0; iIndex < totBooks; iIndex++) {
                        
                        if (this.stBooks.get(iIndex).getsetAccessionNumber() == book.getsetAccessionNumber()) {
                            
                            this.stBooks.set(iIndex, book);
                        }
                    }

                    JOptionPane.showMessageDialog(this, "Successfully Added the Book " + book.getsetAccessionNumber());
                }
            }
            this.bookCount = 0;
            this.setOfSelBooks.clear();
            
            try {
                serializeMember(this.stMember);
                serializeBook(this.stBooks);
                

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }

    }
     
     
     /////////////////////////////////////////////////////
       
      
         
       private void update_Booktable(SetOfBooks stBooks) throws java.lang.ArrayIndexOutOfBoundsException {

        try {

            DefaultTableModel model = (DefaultTableModel) BookTable.getModel();

            model.setRowCount(0);
            int size = stBooks.size();

            String bk[] = new String[10];
            for (int index = 0; index < size; index++) {
                bk[0] = Integer.toString(stBooks.get(index).getsetAccessionNumber());
                bk[1] = stBooks.get(index).getTitle();
                bk[2] = stBooks.get(index).getAuthor();
                bk[3] = stBooks.get(index).getISBN();
                bk[4] = stBooks.get(index).getCatalogue();

                model.addRow(bk);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        BookTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
         
         //////////////////////////////////////////
       
        private void AcceptBooks(Book book) {

        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");

        Date date = new Date();
        
        String Date = dateFormat.format(date);

        Book book1;
        Member mem1;
        Member mem = book.getBorrower();

        int mSize = this.stMember.size();
        for (int index = 0; index < mSize; index++) {
            
            mem1 = this.stMember.get(index);

            if (mem1.getMemberNumber() == mem.getMemberNumber()) {
                
                stMember.set(index, mem);
                
                mem.returnBook(book);

                
            }

        }

        int size = this.stBooks.size();
        for (int index = 0; index < size; index++) {
            book1 = stBooks.get(index);

            if (book1.getsetAccessionNumber() == book.getsetAccessionNumber()) {
                
                book.setBorrower(null);
                book.setLoan(false);
                book.setAcceptDate(Date);
                stBooks.set(index, book);
            }

        }

        try {
             serializeMember(this.stMember);
            serializeBook(this.stBooks);
           

            JOptionPane.showMessageDialog(this, "Successfully Accepted ");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

        fillSelectBookCombo();
        update_Booktable(stBooks);

    }
         ////////////////////////////////////
           private void update_LoanBooktable(SetOfBooks stloanBooks) throws java.lang.ArrayIndexOutOfBoundsException {

        try {

            DefaultTableModel model = (DefaultTableModel) loanBookTable.getModel();

            model.setRowCount(0);
            int size = stloanBooks.size();

            String bk[] = new String[10];
            for (int index = 0; index < size; index++) {
                bk[0] = Integer.toString(stloanBooks.get(index).getsetAccessionNumber());
                bk[1] = stloanBooks.get(index).getTitle();
                bk[2] = stloanBooks.get(index).getAuthor();
                bk[3] = stloanBooks.get(index).getISBN();
                bk[4] = stloanBooks.get(index).getCatalogue();
                bk[5] = String.valueOf(stloanBooks.get(index).getBorrower().getMemberNumber());
                bk[6] = stloanBooks.get(index).getBorrower().getName();
                bk[7] = stloanBooks.get(index).getLoanDate();

                model.addRow(bk);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        loanBookTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
           
           ////////////////////////////////////////////////
            private void update_BooksNotOnLoanTable() throws java.lang.ArrayIndexOutOfBoundsException {

        try {

            DefaultTableModel model = (DefaultTableModel) booksNotOnLoanTable.getModel();

            model.setRowCount(0);
            int size = this.stBooks.size();
            Book book;
            String bk[] = new String[10];
            for (int index = 0; index < size; index++) {

                book = this.stBooks.get(index);
                if (book.isOnLoan() == false) {
                    bk[0] = Integer.toString(book.getsetAccessionNumber());
                    bk[1] = book.getTitle();
                    bk[2] = book.getAuthor();
                    bk[3] = book.getISBN();
                    bk[4] = book.getCatalogue();
                    bk[5] = book.getAcceptDate();

                    model.addRow(bk);
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        booksNotOnLoanTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
           
           ////////////////////////////////////////////////////////////////////////
            
            private void update_BookOnLoanTableBymName(SetOfBooks stloanBooks, String mName) {
        try {

            DefaultTableModel model = (DefaultTableModel) BookOnLoanTable.getModel();

            model.setRowCount(0);
            int size = stloanBooks.size();

            String bk[] = new String[10];
            for (int index = 0; index < size; index++) {

                if (stloanBooks.get(index).getBorrower().getName().equals(mName)) {
                    bk[0] = Integer.toString(stloanBooks.get(index).getsetAccessionNumber());
                    bk[1] = stloanBooks.get(index).getTitle();
                    bk[2] = stloanBooks.get(index).getAuthor();
                    bk[3] = stloanBooks.get(index).getISBN();
                    bk[4] = stloanBooks.get(index).getCatalogue();
                    bk[5] = String.valueOf(stloanBooks.get(index).getBorrower().getMemberNumber());
                    bk[6] = stloanBooks.get(index).getBorrower().getName();
                    bk[7] = stloanBooks.get(index).getLoanDate();

                    model.addRow(bk);
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        BookOnLoanTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
            
           
            
        

            
            //////////////////////////////////////////////
             private void update_BookOnLoanTable(SetOfBooks stloanBooks) throws java.lang.ArrayIndexOutOfBoundsException {

        try {

            DefaultTableModel model = (DefaultTableModel) BookOnLoanTable.getModel();

            model.setRowCount(0);
            int size = stloanBooks.size();

            String bk[] = new String[10];
            for (int index = 0; index < size; index++) {
                bk[0] = Integer.toString(stloanBooks.get(index).getsetAccessionNumber());
                bk[1] = stloanBooks.get(index).getTitle();
                bk[2] = stloanBooks.get(index).getAuthor();
                bk[3] = stloanBooks.get(index).getISBN();
                bk[4] = stloanBooks.get(index).getCatalogue();
                bk[5] = String.valueOf(stloanBooks.get(index).getBorrower().getMemberNumber());
                bk[6] = stloanBooks.get(index).getBorrower().getName();
                bk[7] = stloanBooks.get(index).getLoanDate();

                model.addRow(bk);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        BookOnLoanTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
            
            ///////////////////////////////////////////////////////////
             
              private void update_IssuedBooktable(SetOfBooks stloanBooks) throws java.lang.ArrayIndexOutOfBoundsException {

        try {

            DefaultTableModel model = (DefaultTableModel) IssuedBookTable.getModel();

            model.setRowCount(0);
            int size = stloanBooks.size();

            String bk[] = new String[10];
            for (int index = 0; index < size; index++) {
                bk[0] = Integer.toString(stloanBooks.get(index).getsetAccessionNumber());
                bk[1] = stloanBooks.get(index).getTitle();
                bk[2] = stloanBooks.get(index).getAuthor();
                bk[3] = String.valueOf(stloanBooks.get(index).getBorrower().getMemberNumber());
                bk[4] = stloanBooks.get(index).getBorrower().getName();
                bk[5] = stloanBooks.get(index).getLoanDate();

                model.addRow(bk);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        IssuedBookTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
             
              ////////////////////////////////////////////////////////////
              
                private void update_SelectedBooktable(SetOfBooks stSeltdBooks) throws java.lang.ArrayIndexOutOfBoundsException {

        try {

            DefaultTableModel model = (DefaultTableModel) SelectedBooktable.getModel();

            model.setRowCount(0);
            int size = stSeltdBooks.size();

            String bk[] = new String[5];
            for (int index = 0; index < size; index++) {
                bk[0] = Integer.toString(stSeltdBooks.get(index).getsetAccessionNumber());
                bk[1] = stSeltdBooks.get(index).getTitle();
                bk[2] = stSeltdBooks.get(index).getAuthor();
                bk[3] = stSeltdBooks.get(index).getISBN();
                bk[4] = stSeltdBooks.get(index).getCatalogue();

                model.addRow(bk);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        SelectedBooktable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
             
             /////////////////////////////////////////////////////////////////////
              
               private void update_AcceptedBooktable(Book book) throws java.lang.ArrayIndexOutOfBoundsException {

        try {

            DefaultTableModel model = (DefaultTableModel) acceptedBookTable.getModel();

            String bk[] = new String[10];

            bk[0] = Integer.toString(book.getsetAccessionNumber());
            bk[1] = book.getTitle();
            bk[2] = book.getAuthor();
            bk[3] = book.getAcceptDate();

            model.addRow(bk);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        acceptedBookTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
              
              //////////////////////////////////////////////////////////////////////
               private void update_MemberTable(SetOfMembers stMem) throws java.lang.ArrayIndexOutOfBoundsException {

        try {

            DefaultTableModel model = (DefaultTableModel) memTable.getModel();

            model.setRowCount(0);
            int size = stMem.size();

            String bk[] = new String[10];
            for (int index = 0; index < size; index++) {
                bk[0] = Integer.toString(stMem.get(index).getMemberNumber());
                bk[1] = stMem.get(index).getName();
                bk[2] = stMem.get(index).getDateOfBirth();
                bk[3] = stMem.get(index).getAddress();

                model.addRow(bk);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        memTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
               ////////////////////////////////////////////////////////
             
               
               
                   private void update_BookOnLoanTableBymID(SetOfBooks stloanBooks, int ID) {
        try {

            DefaultTableModel model = (DefaultTableModel) BookOnLoanTable.getModel();

            model.setRowCount(0);
            int size = stloanBooks.size();

            String bk[] = new String[10];
            for (int index = 0; index < size; index++) {

                if (stloanBooks.get(index).getBorrower().getMemberNumber() == ID) {
                    bk[0] = Integer.toString(stloanBooks.get(index).getsetAccessionNumber());
                    bk[1] = stloanBooks.get(index).getTitle();
                    bk[2] = stloanBooks.get(index).getAuthor();
                    bk[3] = stloanBooks.get(index).getISBN();
                    bk[4] = stloanBooks.get(index).getCatalogue();
                    bk[5] = String.valueOf(stloanBooks.get(index).getBorrower().getMemberNumber());
                    bk[6] = stloanBooks.get(index).getBorrower().getName();
                    bk[7] = stloanBooks.get(index).getLoanDate();

                    model.addRow(bk);
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        BookOnLoanTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    }
               /////////////////////////////////////////////////////
                public void windowClosing(WindowEvent e) throws IOException {
        serializeBook(stBooks);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LibraryH().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(LibraryH.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(LibraryH.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BookOnLoanTable;
    private javax.swing.JTable BookTable;
    private javax.swing.JComboBox<String> ComboCatalogue;
    private javax.swing.JTable IssuedBookTable;
    private javax.swing.JButton Reset;
    private javax.swing.JTable SelectedBooktable;
    private javax.swing.JTextField TextAuthor;
    private javax.swing.JTextField TextISBN;
    private javax.swing.JTextField TextTitle;
    private javax.swing.JTable acceptedBookTable;
    private javax.swing.JTable booksNotOnLoanTable;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable loanBookTable;
    private javax.swing.JComboBox<String> loanMemCombo;
    private javax.swing.JTextArea memAddress;
    private datechooser.beans.DateChooserCombo memDob;
    private javax.swing.JTextField memName;
    private javax.swing.JTextField memSearch;
    private javax.swing.JTable memTable;
    private javax.swing.JTextField searchLoanMem;
    private javax.swing.JComboBox<String> searchMemMode;
    private javax.swing.JComboBox<String> selectBookCombo;
    private javax.swing.JComboBox<String> selectMemCombo;
    // End of variables declaration//GEN-END:variables
}
